public class DeterminanteEInversaETRansposta {
    static void obtercofator(int matriz[][], int apoio[][],int p,int q,int n){
        int j = 0, i = 0;
        for(int linha = 0; linha < n; linha++){
            for(int coluna = 0; coluna < n; coluna++){
                if(linha != p && coluna != q){
                    apoio[i][j++] = matriz[linha][coluna];
                    if(j == n -1 ){
                        j = 0;
                        i++;
                    }
                }
            }
        }
    } // Termina os cofatores

    public int determinanteMatriz(int[][] a, int n){
        int determinante = 0;
        if(n == 1){
            return a[0][0];
        }
        int apoio[][]= new int[n][n];
        int multiplicador = 1;

        for(int k = 0; k < n; k++){
            obtercofator(a,apoio,0,k,n);
            determinante += multiplicador * a[0][k] * determinanteMatriz(apoio,n-1);
            multiplicador = -multiplicador;
        }
        return determinante;
    } // determinante

    public int[][] det(int[][] a, int n){
        int[][] resultado = new int[linhas][colunas];
        for (int i = 0; i < linhas; i++){
            for (int j = 0; j < colunas; j++){
                resultado[i][j] = determinanteMatriz(a,n);
            }
        }
        return resultado;
    }

    public int [][] matrizinv(int matriz[][], int n) {
        int apoio[][] = new int[n][n];
        int cofatores[][] = new int[n][n];
        int multiplicador = 1;

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                obtercofator(matriz, apoio, i, j, n);
                cofatores[i][j] = multiplicador * determinanteMatriz(apoio, n - 1);
                multiplicador = -multiplicador;
            }
        }
        int[][] resultado = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                resultado[j][i] = cofatores[i][j];
            }
        }
        return resultado;
    }//cofatores


    public int[][] transposta(int[][] a){
        int[][] resultado = new int[linhas][colunas];
        for (int i = 0; i < linhas; i++){
            for (int j = 0; j < colunas; j++){
                resultado[i][j] = a[j][i];
            }
        }
        return resultado;
    }
}
